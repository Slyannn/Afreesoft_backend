Index: src/Controller/api/OrganismController.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\r\n\r\nnamespace App\\Controller\\api;\r\n\r\nuse App\\Entity\\Address;\r\nuse App\\Entity\\Need;\r\nuse App\\Entity\\Organism;\r\nuse App\\Entity\\User;\r\nuse App\\Form\\OrganismType;\r\nuse App\\Repository\\NeedRepository;\r\nuse App\\Repository\\OrganismRepository;\r\nuse App\\Repository\\UserRepository;\r\nuse App\\Service\\SignupUser;\r\nuse App\\Service\\UploadFile;\r\nuse Doctrine\\ORM\\EntityManagerInterface;\r\nuse Symfony\\Bundle\\FrameworkBundle\\Controller\\AbstractController;\r\nuse Symfony\\Component\\HttpFoundation\\JsonResponse;\r\nuse Symfony\\Component\\HttpFoundation\\Request;\r\nuse Symfony\\Component\\HttpFoundation\\Response;\r\nuse Symfony\\Component\\PasswordHasher\\Hasher\\UserPasswordHasherInterface;\r\nuse Symfony\\Component\\Routing\\Annotation\\Route;\r\nuse Symfony\\Component\\Serializer\\Encoder\\JsonEncoder;\r\nuse Symfony\\Component\\Serializer\\Encoder\\XmlEncoder;\r\nuse Symfony\\Component\\Serializer\\Normalizer\\AbstractNormalizer;\r\nuse Symfony\\Component\\Serializer\\Normalizer\\ObjectNormalizer;\r\nuse Symfony\\Component\\Serializer\\Serializer;\r\nuse Symfony\\Component\\String\\Slugger\\SluggerInterface;\r\n\r\n#[Route('/api/organism')]\r\nclass OrganismController extends AbstractController\r\n{\r\n    private Serializer $serializer;\r\n    //construct the controller Autowiring Serializer and NeedRepository\r\n    public function __construct()\r\n    {\r\n        $encoders = [new XmlEncoder(), new JsonEncoder()];\r\n        $normalizers = [new ObjectNormalizer()];\r\n        $this->serializer = new Serializer($normalizers, $encoders);\r\n    }\r\n\r\n    #[Route('/signup', name: 'app_organism_signup', methods: ['GET', 'POST'])]\r\n    public function signup(\r\n        Request $request,\r\n        UserPasswordHasherInterface $userPasswordHasher,\r\n        EntityManagerInterface      $entityManager,\r\n        UploadFile $uploadFile,\r\n        SluggerInterface $slugger\r\n    ): JsonResponse\r\n    {\r\n        $data = $request->request->all();\r\n\r\n        //New student\r\n        $organism = new Organism();\r\n\r\n        $form = $this->createForm(OrganismType::class, $organism);\r\n        $form->submit($data);\r\n\r\n        $logoFile = $request->files->get('logo');\r\n        if ($logoFile) {\r\n            $logoFileName = $uploadFile->uploadedFilename($logoFile, $slugger);\r\n            $organism->setLogo($logoFileName);\r\n        }\r\n\r\n        //certificate File\r\n        $certificateFile = $request->files->get('certificate');\r\n        if ($certificateFile) {\r\n            $certificateFileName = $uploadFile->uploadedFilename($certificateFile, $slugger);\r\n            $organism->setCertificate($certificateFileName);\r\n        }\r\n        //Set student data\r\n        $organism->setName($data['name']);\r\n        $organism->setDescription($data['description']);\r\n        $organism->setName($data['name']);\r\n\r\n\r\n        //add all services\r\n        foreach ($data['services'] as $service) {\r\n            //find need with id\r\n            $need = $entityManager->getRepository(Need::class)->find($service['id']);\r\n            if($need !== null){\r\n                //add need to organism\r\n                $need->addOrganism($organism);\r\n                $organism->addService($need);\r\n            }else {\r\n                return new JsonResponse(['message' => 'Need not found'], Response::HTTP_NOT_FOUND);\r\n            }\r\n        }\r\n        //check when need already exist in $organism\r\n        $existingOrganism = $entityManager->getRepository(Organism::class)->findOneBy(['name' => $organism->getName()]);\r\n        if ($existingOrganism) {\r\n            return new JsonResponse(['message' => 'Organism already exist'], Response::HTTP_CONFLICT);\r\n        }\r\n\r\n        $user = new User();\r\n        $address = new Address();\r\n\r\n        return (new SignupUser())->signupUser($data, $organism, 'ROLE_ORGANISM', $user, $address, $entityManager, $userPasswordHasher);\r\n    }\r\n\r\n    //get Organism by email\r\n    #[Route('/{email}', name: 'app_organism_get', requirements: ['email' => '\\S+@\\S+\\.\\S+'], methods: ['GET'])]\r\n    public function getOrganism(string $email, EntityManagerInterface $entityManager, UserRepository $userRepository): JsonResponse\r\n    {\r\n        /** @var User $user */\r\n        $user = $userRepository->findOneBy(['email' => $email]);\r\n\r\n        if (!$user) {\r\n            return new JsonResponse(['message' => 'Organism not found'], Response::HTTP_NOT_FOUND);\r\n        }\r\n\r\n        //Serialize $user\r\n        $jsonContent = $this->serializer->serialize($user, 'json', [\r\n            AbstractNormalizer::CIRCULAR_REFERENCE_HANDLER => function ($object) {\r\n                return $object->getId();\r\n            },\r\n            AbstractNormalizer::IGNORED_ATTRIBUTES => ['student', 'organismAdmins', 'students', 'organisms', 'userIdentifier', 'user']\r\n        ]);\r\n\r\n        return new JsonResponse($jsonContent, Response::HTTP_OK, [], true);\r\n    }\r\n\r\n\r\n\r\n    //Get All Organisms\r\n    #[Route('/all', name:'app_organism_get_all', methods:['GET'])]\r\n    public function getAllOrganisms(OrganismRepository $organismRepository):JsonResponse\r\n    {\r\n        $organisms =  $organismRepository->findAll();\r\n        $jsonContent = $this->serializer->serialize($organisms, 'json',\r\n        [AbstractNormalizer::CIRCULAR_REFERENCE_HANDLER => function ($object) {\r\n            return $object->getId();\r\n        }],\r\n        [AbstractNormalizer::IGNORED_ATTRIBUTES => ['certificate', 'roles', 'organism', 'student']]);\r\n\r\n        return new JsonResponse($jsonContent, Response::HTTP_OK, [], true);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Controller/api/OrganismController.php b/src/Controller/api/OrganismController.php
--- a/src/Controller/api/OrganismController.php	(revision ebbb99eac6da4323c75d76112569e40045512acc)
+++ b/src/Controller/api/OrganismController.php	(date 1701371523306)
@@ -7,9 +7,6 @@
 use App\Entity\Organism;
 use App\Entity\User;
 use App\Form\OrganismType;
-use App\Repository\NeedRepository;
-use App\Repository\OrganismRepository;
-use App\Repository\UserRepository;
 use App\Service\SignupUser;
 use App\Service\UploadFile;
 use Doctrine\ORM\EntityManagerInterface;
@@ -19,24 +16,11 @@
 use Symfony\Component\HttpFoundation\Response;
 use Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface;
 use Symfony\Component\Routing\Annotation\Route;
-use Symfony\Component\Serializer\Encoder\JsonEncoder;
-use Symfony\Component\Serializer\Encoder\XmlEncoder;
-use Symfony\Component\Serializer\Normalizer\AbstractNormalizer;
-use Symfony\Component\Serializer\Normalizer\ObjectNormalizer;
-use Symfony\Component\Serializer\Serializer;
 use Symfony\Component\String\Slugger\SluggerInterface;
 
 #[Route('/api/organism')]
 class OrganismController extends AbstractController
 {
-    private Serializer $serializer;
-    //construct the controller Autowiring Serializer and NeedRepository
-    public function __construct()
-    {
-        $encoders = [new XmlEncoder(), new JsonEncoder()];
-        $normalizers = [new ObjectNormalizer()];
-        $this->serializer = new Serializer($normalizers, $encoders);
-    }
 
     #[Route('/signup', name: 'app_organism_signup', methods: ['GET', 'POST'])]
     public function signup(
@@ -99,39 +83,42 @@
 
     //get Organism by email
     #[Route('/{email}', name: 'app_organism_get', requirements: ['email' => '\S+@\S+\.\S+'], methods: ['GET'])]
-    public function getOrganism(string $email, EntityManagerInterface $entityManager, UserRepository $userRepository): JsonResponse
+    public function getOrganism(string $email, EntityManagerInterface $entityManager): JsonResponse
     {
-        /** @var User $user */
-        $user = $userRepository->findOneBy(['email' => $email]);
+        $user = $entityManager->getRepository(User::class)->findOneBy(['email' => $email]);
 
         if (!$user) {
             return new JsonResponse(['message' => 'Organism not found'], Response::HTTP_NOT_FOUND);
         }
-
-        //Serialize $user
-        $jsonContent = $this->serializer->serialize($user, 'json', [
-            AbstractNormalizer::CIRCULAR_REFERENCE_HANDLER => function ($object) {
-                return $object->getId();
-            },
-            AbstractNormalizer::IGNORED_ATTRIBUTES => ['student', 'organismAdmins', 'students', 'organisms', 'userIdentifier', 'user']
-        ]);
+        //dataProvider
+        $user = [
+            'id' => $user->getId(),
+            'email' => $user->getEmail(),
+            'roles' => $user->getRoles(),
+            'password' => $user->getPassword(),
+            'address' => [
+                'id' => $user->getAddress()?->getId(),
+                'street' => $user->getAddress()?->getStreet(),
+                'city' => $user->getAddress()?->getCity(),
+                'zipCode' => $user->getAddress()?->getZipCode(),
+                'country' => $user->getAddress()?->getCountry(),
+            ],
+            'organism' => [
+                'id' => $user->getOrganism()?->getId(),
+                'name' => $user->getOrganism()?->getName(),
+                'description' => $user->getOrganism()?->getDescription(),
+                'logo' => $user->getOrganism()?->getLogo(),
+                'certificate' => $user->getOrganism()?->getCertificate(),
+                'services' => array_map(static function ($service) {
+                    return [
+                        'id' => $service->getId(),
+                        'name' => $service->getName(),
+                    ];
+                }, $user->getOrganism()?->getServices()->toArray())
+            ],
+        ];
 
-        return new JsonResponse($jsonContent, Response::HTTP_OK, [], true);
+        return new JsonResponse($user, Response::HTTP_OK);
     }
 
-
-
-    //Get All Organisms
-    #[Route('/all', name:'app_organism_get_all', methods:['GET'])]
-    public function getAllOrganisms(OrganismRepository $organismRepository):JsonResponse
-    {
-        $organisms =  $organismRepository->findAll();
-        $jsonContent = $this->serializer->serialize($organisms, 'json',
-        [AbstractNormalizer::CIRCULAR_REFERENCE_HANDLER => function ($object) {
-            return $object->getId();
-        }],
-        [AbstractNormalizer::IGNORED_ATTRIBUTES => ['certificate', 'roles', 'organism', 'student']]);
-
-        return new JsonResponse($jsonContent, Response::HTTP_OK, [], true);
-    }
 }
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_23_11_2023_15_18__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_23_11_2023_15_18__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_23_11_2023_15_18__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_23_11_2023_15_18__Changes_.xml	(revision ebbb99eac6da4323c75d76112569e40045512acc)
+++ /dev/null	(revision ebbb99eac6da4323c75d76112569e40045512acc)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_23_11_2023_15_18_[Changes]" date="1700749132872" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_23_11_2023_15_18_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 23.11.2023 15:18 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_23_11_2023_15_18_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_23_11_2023_15_18_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_23_11_2023_15_18_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_23_11_2023_15_18_[Changes]/shelved.patch	(revision ebbb99eac6da4323c75d76112569e40045512acc)
+++ /dev/null	(revision ebbb99eac6da4323c75d76112569e40045512acc)
@@ -1,28 +0,0 @@
-Index: src/Controller/api/StudentController.php
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?php\r\n\r\nnamespace App\\Controller\\api;\r\n\r\nuse App\\Entity\\Address;\r\nuse App\\Entity\\Student;\r\nuse Doctrine\\ORM\\EntityManagerInterface;\r\nuse Symfony\\Bundle\\FrameworkBundle\\Controller\\AbstractController;\r\nuse Symfony\\Component\\HttpFoundation\\JsonResponse;\r\nuse Symfony\\Component\\HttpFoundation\\Request;\r\nuse Symfony\\Component\\PasswordHasher\\Hasher\\UserPasswordHasherInterface;\r\nuse Symfony\\Component\\Routing\\Annotation\\Route;\r\n\r\n#[Route('/api/student')]\r\nclass StudentController extends AbstractController\r\n{\r\n\r\n    public function __construct(){}\r\n\r\n    #[Route('/signup', name: 'app_student-signup', methods: ['GET', 'POST'])]\r\n    public function signup(\r\n        Request $request,\r\n        UserPasswordHasherInterface $userPasswordHasher,\r\n        EntityManagerInterface      $entityManager): JsonResponse\r\n    {\r\n        //Extract data from the request\r\n        $data = json_decode($request->getContent(), true);\r\n        //New student\r\n        $student = new Student();\r\n        //Set student data\r\n        $student->setFirstname($data['firstname']);\r\n        $student->setLastname($data['lastname']);\r\n        $student->setUniversity($data['university']);\r\n        $student->setEmail($data['email']);\r\n        $student->setPassword($userPasswordHasher->hashPassword($student, $data['password']));\r\n        $student->setRoles(['ROLE_STUDENT']);\r\n\r\n        //New address\r\n        $address = new Address();\r\n        //Set address data\r\n        $address->setStreet($data['address']['street']);\r\n        $address->setCity($data['address']['city']);\r\n        $address->setZipCode($data['address']['zipCode']);\r\n        $address->setCountry($data['address']['country']);\r\n        //$address->addStudent($student);\r\n\r\n        $existingStudent = $entityManager->getRepository(Student::class)->findOneBy(['email' => $student->getEmail()]);\r\n\r\n        if ($existingStudent) {\r\n            return new JsonResponse(['message' => 'Email is already registered'], JsonResponse::HTTP_CONFLICT);\r\n        }\r\n\r\n        //save address\r\n        $entityManager->persist($address);\r\n        $entityManager->flush();\r\n\r\n        $student->setAddress($address);\r\n\r\n\r\n        //Save student\r\n        $entityManager->persist($student);\r\n\r\n        $entityManager->flush();\r\n\r\n        return new JsonResponse(['message' => 'Student registered successfully'], JsonResponse::HTTP_CREATED);\r\n    }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/Controller/api/StudentController.php b/src/Controller/api/StudentController.php
---- a/src/Controller/api/StudentController.php	(revision 270fa498b971bf3e13e3b65f65804c2283b988eb)
-+++ b/src/Controller/api/StudentController.php	(date 1700747836685)
-@@ -2,6 +2,7 @@
- 
- namespace App\Controller\api;
- 
-+use App\Dto\StudentDto;
- use App\Entity\Address;
- use App\Entity\Student;
- use Doctrine\ORM\EntityManagerInterface;
-@@ -10,6 +11,9 @@
- use Symfony\Component\HttpFoundation\Request;
- use Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface;
- use Symfony\Component\Routing\Annotation\Route;
-+use Symfony\Component\Serializer\Encoder\JsonEncoder;
-+use Symfony\Component\Serializer\Normalizer\ObjectNormalizer;
-+use Symfony\Component\Serializer\Serializer;
- 
- #[Route('/api/student')]
- class StudentController extends AbstractController
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"98974b7d-811b-4f0c-b725-a01710577d45\" name=\"Changes\" comment=\"Remove StudAutController\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ComposerSettings\" synchronizationState=\"SYNCHRONIZE\">\r\n    <pharConfigPath>$PROJECT_DIR$/composer.json</pharConfigPath>\r\n    <execution>\r\n      <executable path=\"composer\" />\r\n    </execution>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"PhpWorkspaceProjectConfiguration\" interpreter_name=\"C:\\Users\\steph\\scoop\\shims\\php.exe\">\r\n    <include_path>\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/validator\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/twig-bundle\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/twig-bridge\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/translation-contracts\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/translation\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/string\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/stopwatch\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/service-contracts\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/serializer\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/security-http\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/security-csrf\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/security-core\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/security-bundle\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/runtime\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/routing\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/property-info\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/property-access\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/process\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/polyfill-php83\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/polyfill-mbstring\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/polyfill-intl-normalizer\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/polyfill-intl-idn\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/polyfill-intl-icu\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/polyfill-intl-grapheme\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/phpunit-bridge\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/password-hasher\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/options-resolver\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/notifier\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/monolog-bundle\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/monolog-bridge\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/mime\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/messenger\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/maker-bundle\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/mailer\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/intl\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/http-kernel\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/http-foundation\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/http-client-contracts\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/http-client\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/framework-bundle\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/form\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/flex\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/finder\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/filesystem\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/expression-language\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/event-dispatcher-contracts\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/event-dispatcher\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/error-handler\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/dotenv\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/dom-crawler\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/doctrine-messenger\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/doctrine-bridge\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/deprecation-contracts\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/dependency-injection\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/debug-bundle\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/css-selector\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/console\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/config\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/clock\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/cache-contracts\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/cache\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/browser-kit\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/asset\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/phpunit/phpunit\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/phpunit/php-timer\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/phpunit/php-text-template\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/phpunit/php-invoker\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/phpunit/php-file-iterator\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/phpunit/php-code-coverage\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/phpstan/phpdoc-parser\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/phar-io/version\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/phar-io/manifest\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/myclabs/deep-copy\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/monolog/monolog\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/egulias/email-validator\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/nikic/php-parser\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/twig/twig\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/twig/extra-bundle\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/psr/log\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/psr/link\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/psr/event-dispatcher\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/psr/container\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/psr/clock\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/psr/cache\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/phpdocumentor/type-resolver\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/phpdocumentor/reflection-docblock\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/phpdocumentor/reflection-common\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/masterminds/html5\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/webmozart/assert\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/sebastian/version\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/sebastian/type\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/sebastian/resource-operations\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/sebastian/recursion-context\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/sebastian/object-reflector\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/sebastian/object-enumerator\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/sebastian/lines-of-code\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/sebastian/global-state\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/sebastian/exporter\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/sebastian/environment\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/sebastian/diff\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/sebastian/complexity\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/sebastian/comparator\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/sebastian/code-unit-reverse-lookup\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/sebastian/code-unit\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/sebastian/cli-parser\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/sql-formatter\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/composer\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/persistence\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/orm\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/migrations\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/lexer\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/instantiator\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/inflector\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/event-manager\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/doctrine-migrations-bundle\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/doctrine-bundle\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/deprecations\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/dbal\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/common\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/collections\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/cache\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/theseer/tokenizer\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/yaml\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/web-profiler-bundle\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/web-link\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/var-exporter\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/symfony/var-dumper\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/doctrine-fixtures-bundle\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/doctrine/data-fixtures\" />\r\n      <path value=\"$PROJECT_DIR$/vendor/nelmio/cors-bundle\" />\r\n    </include_path>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2YXQ0qhCcN8xAgaSXyutSVo16ts\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/steph/PhpstormProjects/afreesoft-backend&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;php.override.implement.member.chooser.php.doc&quot;: &quot;NONE&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunAnythingCache\">\r\n    <option name=\"myCommands\">\r\n      <command value=\"form-check\" />\r\n    </option>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"phpunit.xml.dist\" type=\"PHPUnitRunConfigurationType\" factoryName=\"PHPUnit\">\r\n      <TestRunner scope=\"XML\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"98974b7d-811b-4f0c-b725-a01710577d45\" name=\"Changes\" comment=\"\" />\r\n      <created>1700669223465</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1700669223465</updated>\r\n      <workItem from=\"1700669228499\" duration=\"29000\" />\r\n      <workItem from=\"1700669283393\" duration=\"635000\" />\r\n      <workItem from=\"1700669962785\" duration=\"2932000\" />\r\n      <workItem from=\"1700673000276\" duration=\"18607000\" />\r\n      <workItem from=\"1700733271161\" duration=\"40657000\" />\r\n      <workItem from=\"1701018853661\" duration=\"20483000\" />\r\n      <workItem from=\"1701112087488\" duration=\"1053000\" />\r\n      <workItem from=\"1701113178690\" duration=\"23940000\" />\r\n      <workItem from=\"1701184654864\" duration=\"1110000\" />\r\n      <workItem from=\"1701186973455\" duration=\"8086000\" />\r\n      <workItem from=\"1701219098034\" duration=\"3346000\" />\r\n      <workItem from=\"1701283414143\" duration=\"9834000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Register Student API\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1700696080036</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1700696080037</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"update ticket\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1700737001379</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1700737001379</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"update AdminAuthenticator.php\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1700739525208</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1700739525208</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Student add and remove needs&#10;Admin portal Design&#10;Add Students to need\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1700789983171</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1700789983171</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Update the of StudentController to StudentAuthController.php\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1700790124715</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1700790124715</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"update ticket\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1700821263946</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1700821263947</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Delete magento2plugin.xml\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1701185034051</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1701185034052</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Remove StudAutController\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1701187054002</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1701187054002</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"Remove StudAutController\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1701188238617</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1701188238617</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"10\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Register Student API\" />\r\n    <MESSAGE value=\"update AdminAuthenticator.php\" />\r\n    <MESSAGE value=\"Student add and remove needs&#10;Admin portal Design&#10;Add Students to need\" />\r\n    <MESSAGE value=\"Update the of StudentController to StudentAuthController.php\" />\r\n    <MESSAGE value=\"update ticket\" />\r\n    <MESSAGE value=\"update\" />\r\n    <MESSAGE value=\"Remove StudAutController\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Remove StudAutController\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision ebbb99eac6da4323c75d76112569e40045512acc)
+++ b/.idea/workspace.xml	(date 1701371308105)
@@ -5,7 +5,10 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="98974b7d-811b-4f0c-b725-a01710577d45" name="Changes" comment="Remove StudAutController">
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_23_11_2023_15_18_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_23_11_2023_15_18__Changes_.xml" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Controller/api/OrganismController.php" beforeDir="false" afterPath="$PROJECT_DIR$/src/Controller/api/OrganismController.php" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
