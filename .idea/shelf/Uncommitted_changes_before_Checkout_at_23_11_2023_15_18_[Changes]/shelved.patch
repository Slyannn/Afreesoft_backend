Index: src/Controller/api/StudentController.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\r\n\r\nnamespace App\\Controller\\api;\r\n\r\nuse App\\Entity\\Address;\r\nuse App\\Entity\\Student;\r\nuse Doctrine\\ORM\\EntityManagerInterface;\r\nuse Symfony\\Bundle\\FrameworkBundle\\Controller\\AbstractController;\r\nuse Symfony\\Component\\HttpFoundation\\JsonResponse;\r\nuse Symfony\\Component\\HttpFoundation\\Request;\r\nuse Symfony\\Component\\PasswordHasher\\Hasher\\UserPasswordHasherInterface;\r\nuse Symfony\\Component\\Routing\\Annotation\\Route;\r\n\r\n#[Route('/api/student')]\r\nclass StudentController extends AbstractController\r\n{\r\n\r\n    public function __construct(){}\r\n\r\n    #[Route('/signup', name: 'app_student-signup', methods: ['GET', 'POST'])]\r\n    public function signup(\r\n        Request $request,\r\n        UserPasswordHasherInterface $userPasswordHasher,\r\n        EntityManagerInterface      $entityManager): JsonResponse\r\n    {\r\n        //Extract data from the request\r\n        $data = json_decode($request->getContent(), true);\r\n        //New student\r\n        $student = new Student();\r\n        //Set student data\r\n        $student->setFirstname($data['firstname']);\r\n        $student->setLastname($data['lastname']);\r\n        $student->setUniversity($data['university']);\r\n        $student->setEmail($data['email']);\r\n        $student->setPassword($userPasswordHasher->hashPassword($student, $data['password']));\r\n        $student->setRoles(['ROLE_STUDENT']);\r\n\r\n        //New address\r\n        $address = new Address();\r\n        //Set address data\r\n        $address->setStreet($data['address']['street']);\r\n        $address->setCity($data['address']['city']);\r\n        $address->setZipCode($data['address']['zipCode']);\r\n        $address->setCountry($data['address']['country']);\r\n        //$address->addStudent($student);\r\n\r\n        $existingStudent = $entityManager->getRepository(Student::class)->findOneBy(['email' => $student->getEmail()]);\r\n\r\n        if ($existingStudent) {\r\n            return new JsonResponse(['message' => 'Email is already registered'], JsonResponse::HTTP_CONFLICT);\r\n        }\r\n\r\n        //save address\r\n        $entityManager->persist($address);\r\n        $entityManager->flush();\r\n\r\n        $student->setAddress($address);\r\n\r\n\r\n        //Save student\r\n        $entityManager->persist($student);\r\n\r\n        $entityManager->flush();\r\n\r\n        return new JsonResponse(['message' => 'Student registered successfully'], JsonResponse::HTTP_CREATED);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Controller/api/StudentController.php b/src/Controller/api/StudentController.php
--- a/src/Controller/api/StudentController.php	(revision 270fa498b971bf3e13e3b65f65804c2283b988eb)
+++ b/src/Controller/api/StudentController.php	(date 1700747836685)
@@ -2,6 +2,7 @@
 
 namespace App\Controller\api;
 
+use App\Dto\StudentDto;
 use App\Entity\Address;
 use App\Entity\Student;
 use Doctrine\ORM\EntityManagerInterface;
@@ -10,6 +11,9 @@
 use Symfony\Component\HttpFoundation\Request;
 use Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface;
 use Symfony\Component\Routing\Annotation\Route;
+use Symfony\Component\Serializer\Encoder\JsonEncoder;
+use Symfony\Component\Serializer\Normalizer\ObjectNormalizer;
+use Symfony\Component\Serializer\Serializer;
 
 #[Route('/api/student')]
 class StudentController extends AbstractController
